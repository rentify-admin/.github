name: Deploy to Lambda

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      python-version:
        required: true
        type: string
      lambda-url:
        required: true
        type: string
      version-alias:
        required: false
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      FUNCTION_NAME:
        required: true
      S3_BUCKET:
        required: true

jobs:

  deploy:
    name: Deploy to Lambda
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: ${{ inputs.lambda-url }}
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install pipenv
        run: |
          pip install pipenv

      - name: Install dependencies
        run: |
          pipenv install --deploy --ignore-pipfile

      - name: Package Lambda and dependencies
        run: |
          pipenv run pip freeze | xargs pip install --no-cache-dir -t .
          zip -r lambda.zip . -x "*.git*" "*__pycache__*" "*venv*" "Pipfile*" "*.log" "*.yml" "*.md" "*.editorconfig" "LICENSE" "NOTICE"

      - name: Get SHA
        id: get-sha
        run: echo "SHA=${GITHUB_SHA:0:8}" >> $GITHUB_ENV

      - name: Upload to S3
        run: aws s3 cp lambda.zip s3://${{ secrets.S3_BUCKET }}/${{ secrets.FUNCTION_NAME }}/${{ env.sha }}.zip

      - name: Deploy to Lambda from S3
        run: |
          aws lambda update-function-code \
            --function-name ${{ secrets.FUNCTION_NAME }} \
            --s3-bucket ${{ secrets.S3_BUCKET }} \
            --s3-key ${{ secrets.FUNCTION_NAME }}/${{ env.sha }}.zip

      - name: Update Lambda Alias
        if: ${{ inputs.version-alias }}
        run: |
          version=$(aws lambda publish-version --function-name ${{ secrets.FUNCTION_NAME }} --query 'Version' --output text)
          aws lambda update-alias \
            --function-name ${{ secrets.FUNCTION_NAME }} \
            --name ${{ inputs.version-alias }} \
            --function-version $version
