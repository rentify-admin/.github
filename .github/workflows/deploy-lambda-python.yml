name: Deploy to Lambda

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      python-version:
        required: true
        type: string
      lambda-url:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      FUNCTION_NAME:
        required: true
      VERSION_ALIAS:
        required: false

jobs:

  deploy:
    name: Deploy to Lambda
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: ${{ inputs.lambda-url }}
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install pipenv
        run: |
          pip install pipenv

      - name: Install dependencies
        run: |
          pipenv install --deploy --ignore-pipfile

      - name: Package Lambda and dependencies
        run: |
          pipenv run pip freeze | xargs pip install --no-cache-dir -t .
          zip -r lambda.zip . -x "*.git*" "*__pycache__*" "*venv*" "Pipfile*" "*.log" "*.yml" "*.md" ".editorconfig" "LICENSE" "NOTICE"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to Lambda
        uses: int128/deploy-lambda-action@v1
        with:
          function-name: ${{ secrets.FUNCTION_NAME }}
          zip-path: ./lambda.zip
          alias-name: ${{ secrets.VERSION_ALIAS || '' }}
